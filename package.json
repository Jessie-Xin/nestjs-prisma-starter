{
  "name": "nestjs-prisma-client-starter",
  "version": "0.0.1",
  "description": "NestJS Prisma Client Starter Project",
  "author": "Marc Stammerjohann",
  "license": "MIT",
  "keywords": [
    "nestjs",
    "prisma",
    "prisma client",
    "typescript",
    "passport",
    "graphql"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/fivethree-team/nestjs-prisma-client-example.git"
  },
  "bugs": {
    "url": "https://github.com/fivethree-team/nestjs-prisma-client-example/issues"
  },
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "migrate:dev": "prisma migrate dev --preview-feature",
    "migrate:dev:create": "prisma migrate dev --create-only --preview-feature",
    "migrate:reset": "prisma migrate reset --preview-feature",
    "migrate:deploy": "npx prisma migrate deploy --preview-feature",
    "migrate:status": "npx prisma migrate status --preview-feature",
    "migrate:resolve": "npx prisma migrate resolve --preview-feature",
    "prisma:studio": "npx prisma studio",
    "prisma:generate": "npx prisma generate",
    "prisma:generate:watch": "npx prisma generate --watch",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "start:db": "npm run migrate:up && npm run prisma:generate && npm run seed",
    "seed": "prisma db seed",
    "postinstall": "echo 'Skipping prisma:generate during install'",
    "docker:migrate": "docker compose -f docker-compose.migrate.yml up -d",
    "docker:db": " docker compose -f  docker-compose.db.yml up -d",
    "docker:seed": "docker exec -it nest-api npm run seed",
    "docker": "docker compose up -d",
    "docker:build": "docker compose build"
  },
  "dependencies": {
    "@apollo/server": "^5.0.0",
    "@as-integrations/express5": "^1.1.2",
    "@devoxa/prisma-relay-cursor-connection": "3.1.2",
    "@nestjs/apollo": "13.2.1",
    "@nestjs/common": "11.1.7",
    "@nestjs/config": "4.0.2",
    "@nestjs/core": "11.1.7",
    "@nestjs/graphql": "13.2.0",
    "@nestjs/jwt": "11.0.1",
    "@nestjs/passport": "11.0.5",
    "@nestjs/platform-express": "11.1.7",
    "@nestjs/swagger": "11.2.1",
    "@prisma/client": "^6.18.0",
    "bcrypt": "6.0.0",
    "class-transformer": "0.5.1",
    "class-validator": "0.14.2",
    "graphql": "16.11.0",
    "graphql-scalars": "1.25.0",
    "graphql-subscriptions": "3.0.0",
    "nestjs-prisma": "0.26.0",
    "passport": "0.7.0",
    "passport-jwt": "4.0.1",
    "reflect-metadata": "0.2.2",
    "rxjs": "7.8.2"
  },
  "devDependencies": {
    "@nestjs/cli": "11.0.10",
    "@nestjs/schematics": "11.0.9",
    "@nestjs/testing": "11.1.7",
    "@swc/cli": "^0.7.8",
    "@swc/core": "^1.13.5",
    "@types/bcrypt": "6.0.0",
    "@types/chance": "1.1.7",
    "@types/express": "5.0.3",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.9.1",
    "@types/supertest": "6.0.3",
    "@typescript-eslint/eslint-plugin": "^8.46.2",
    "@typescript-eslint/parser": "^8.46.2",
    "chance": "1.1.13",
    "eslint": "^9.38.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "jest": "30.2.0",
    "prettier": "3.6.2",
    "prisma": "6.18.0",
    "supertest": "7.1.4",
    "ts-jest": "29.4.5",
    "ts-loader": "9.5.4",
    "ts-node": "10.9.2",
    "tsconfig-paths": "4.2.0",
    "typescript": "^5.9.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  }
}
